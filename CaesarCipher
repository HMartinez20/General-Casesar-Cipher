/******************************************
 Write a program that can encrypt and 
 decrpyt using the general Caesar cipher,
 also known as an additive cipher.
*******************************************/

#include <iostream>
#include <istream>
#include <iomanip>
#include <cstdlib>

using namespace std;

const int KEY = 2;
const int STRINGLEN = 10+1;
const char alphabet[26] = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};

int toVal(char c){
    for(int x = 0; x < 26; x++){
        if(toupper(c) == alphabet[x])
            return x;
    }
    return 99;
}

char toChar(int i){
    if(i >= 0 && i <= 25)
        return alphabet[i];
    else
        return ' ';
}

char encrypt(char input){
	if (toVal(input) <= 25) {
		return toChar((toVal(input) + KEY) % 26);
	}
	else
		return ' ';
}

void decrypt(char input){
    if(toVal(input) <= 25){
		if (toVal(input) <= KEY - 1) 
			cout << toChar( 26 + (toVal(input) - KEY) % 26);
		else
	        cout << toChar( (toVal(input) - KEY) % 26 );
    }
    else
        cout << ' ';
}

int main()
{
    char input[STRINGLEN];
	char encrypted[STRINGLEN] = {""};
    
    cout << "What is your text? ";
	cin.getline(input, STRINGLEN);
    
	 cout << "\nEncrypted text: ";
	 for (int i = 0; i < sizeof(input); i++) {
		 encrypted[i] = encrypt(input[i]);
		 cout << encrypted[i];
	 }

	 cout << "\nDecrypted text: ";
	 for (int i = 0; i < sizeof(encrypted); i++) {
		 decrypt(encrypted[i]);
	 }

	 cout << endl;

    return 0;
}
